@model Site
@using CodeBase.Models;
@{
    var site = Model;
    var page = (APage)ViewData["page"];
    selectedPages = page.Path.Split(new string[] { "," }, StringSplitOptions.None).Select(x => int.Parse(x)).ToArray();
}
<nav class="myNav">    
    @RenderChildNodes(site)
</nav>


@helper RenderChildNodes(IPublishedContent parent)
{
    var childs = parent?.Children().OfType<APage>();
    <ul>
        @foreach (var pitem in childs)
        {  
            var isActive = selectedPages.Contains(pitem.Id);
            var className = isActive ? "active" : "";
            if (!pitem.isHidden)
            {
                <li class="@className">
                    <a class="nav-link @(pitem.IsAncestorOrSelf(Model) ? "nav-link--active" : null)" href="@pitem.Url">@pitem.MenuTitle</a>
                    @if (isActive)
                    {
                        @RenderChildNodes(pitem)
                    }
                </li>
            }
        }
    </ul>
}


@functions{
    int[] selectedPages = new int[0];
}